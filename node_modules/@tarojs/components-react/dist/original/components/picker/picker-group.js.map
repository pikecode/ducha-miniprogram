{"version":3,"file":"picker-group.js","sources":["../../../../src/components/picker/picker-group.tsx"],"sourcesContent":["import { ScrollView, View } from '@tarojs/components'\nimport * as React from 'react'\n\n// 添加类型定义\ntype TaroScrollView = React.ElementRef<typeof ScrollView>\ntype TaroView = React.ElementRef<typeof View>\n\nexport interface PickerGroupProps {\n  mode?: 'basic' | 'time' | 'date' | 'region'\n  range: any[]\n  rangeKey?: string\n  columnId: string\n  updateIndex: (index: number, columnId: string, needRevise?: boolean) => void // 替换updateHeight\n  onColumnChange?: (e: { columnId: string, index: number }) => void // 修改回调参数名称\n  updateDay?: (value: number, fields: number) => void\n  selectedIndex?: number // 添加selectedIndex参数\n  _updateTrigger?: any // 仅用于强制触发更新\n  colors?: {\n    itemDefaultColor?: string // 选项字体默认颜色\n    itemSelectedColor?: string // 选项字体选中颜色\n  }\n}\n\n// 定义常量\nconst PICKER_LINE_HEIGHT = 34 // px\nconst PICKER_VISIBLE_ITEMS = 7 // 可见行数\nconst PICKER_BLANK_ITEMS = 3 // 空白行数\n\nexport function PickerGroupBasic(props: PickerGroupProps) {\n  const {\n    range = [],\n    rangeKey,\n    columnId,\n    updateIndex,\n    onColumnChange,\n    selectedIndex = 0, // 使用selectedIndex参数，默认为0\n    colors = {},\n  } = props\n  const [targetScrollTop, setTargetScrollTop] = React.useState(0)\n  const scrollViewRef = React.useRef<TaroScrollView>(null)\n  const itemRefs = React.useRef<Array<TaroView | null>>([])\n  // 使用selectedIndex初始化当前索引\n  const [currentIndex, setCurrentIndex] = React.useState(selectedIndex)\n  // 触摸状态用于优化用户体验\n  const [isTouching, setIsTouching] = React.useState(false)\n\n  const itemHeightRef = React.useRef(PICKER_LINE_HEIGHT)\n  React.useEffect(() => {\n    if (scrollViewRef.current) {\n      itemHeightRef.current = scrollViewRef.current.scrollHeight / scrollViewRef.current.childNodes.length\n    }\n  }, [range.length]) // 只在range长度变化时重新计算\n  // 获取选中的索引\n  const getSelectedIndex = (scrollTop: number) => {\n    return Math.round(scrollTop / itemHeightRef.current)\n  }\n\n  // 当selectedIndex变化时，调整滚动位置\n  React.useEffect(() => {\n    if (scrollViewRef.current && range.length > 0 && !isTouching) {\n      setTargetScrollTop(selectedIndex * itemHeightRef.current)\n      setCurrentIndex(selectedIndex)\n    }\n  }, [selectedIndex, range])\n\n  // 是否处于归中状态\n  const isCenterTimerId = React.useRef<NodeJS.Timeout | null>(null)\n  // 简化为直接在滚动结束时通知父组件\n  const handleScrollEnd = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    // 做一个0.1s延时  0.1s之内没有新的滑动 则把选项归到中间 然后更新选中项\n    isCenterTimerId.current = setTimeout(() => {\n      if (!scrollViewRef.current) return\n\n      const scrollTop = scrollViewRef.current.scrollTop\n      const newIndex = getSelectedIndex(scrollTop)\n\n      setIsTouching(false)\n      setTargetScrollTop(newIndex * itemHeightRef.current + Math.random() * 0.001) // 随机数为了在一个项内滚动时强制刷新\n      updateIndex(newIndex, columnId)\n      onColumnChange?.({ columnId, index: newIndex })\n    }, 100)\n  }\n  // 滚动处理 - 在滚动时计算索引然后更新选中项样式\n  const handleScroll = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    const scrollTop = scrollViewRef.current.scrollTop\n    const newIndex = getSelectedIndex(scrollTop)\n    if (newIndex !== currentIndex) {\n      setCurrentIndex(newIndex)\n    }\n  }\n\n  // 渲染选项\n  const pickerItem = range.map((item, index) => {\n    const content = rangeKey && item && typeof item === 'object' ? item[rangeKey] : item\n\n    return (\n      <View\n        id={`picker-item-${columnId}-${index}`}\n        key={index}\n        ref={(el) => (itemRefs.current[index] = el)}\n        className={`taro-picker__item${index === currentIndex ? ' taro-picker__item--selected' : ''}`}\n        style={{\n          height: PICKER_LINE_HEIGHT,\n          color: index === currentIndex\n            ? (colors.itemSelectedColor || undefined)\n            : (colors.itemDefaultColor || undefined)\n        }}\n      >\n        {content}\n      </View>\n    )\n  })\n\n  const realPickerItems = [\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-top-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n    ...pickerItem,\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-bottom-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n  ]\n\n  return (\n    <View className=\"taro-picker__group\">\n      <View className=\"taro-picker__mask\" />\n      <View className=\"taro-picker__indicator\" />\n      <ScrollView\n        ref={scrollViewRef}\n        scrollY\n        showScrollbar={false}\n        className=\"taro-picker__content\"\n        style={{\n          height: PICKER_LINE_HEIGHT * PICKER_VISIBLE_ITEMS,\n        }}\n        scrollTop={targetScrollTop}\n        onScroll={handleScroll}\n        onTouchStart={() => setIsTouching(true)}\n        onScrollEnd={handleScrollEnd}\n        scrollWithAnimation\n      >\n        {realPickerItems}\n      </ScrollView>\n    </View>\n  )\n}\n\n// 时间选择器实现\nexport function PickerGroupTime(props: PickerGroupProps) {\n  const {\n    range = [],\n    rangeKey,\n    columnId,\n    updateIndex,\n    selectedIndex = 0,\n    colors = {},\n  } = props\n\n  const [targetScrollTop, setTargetScrollTop] = React.useState(0)\n  const scrollViewRef = React.useRef<TaroScrollView>(null)\n  const itemRefs = React.useRef<Array<TaroView | null>>([])\n  const [currentIndex, setCurrentIndex] = React.useState(selectedIndex)\n  const [isTouching, setIsTouching] = React.useState(false)\n\n  const itemHeightRef = React.useRef(PICKER_LINE_HEIGHT)\n  React.useEffect(() => {\n    if (scrollViewRef.current) {\n      itemHeightRef.current = scrollViewRef.current.scrollHeight / scrollViewRef.current.childNodes.length\n    }\n  }, [range.length]) // 只在range长度变化时重新计算\n\n  const getSelectedIndex = (scrollTop: number) => {\n    return Math.round(scrollTop / itemHeightRef.current)\n  }\n\n  // 当selectedIndex变化时，调整滚动位置\n  React.useEffect(() => {\n    if (scrollViewRef.current && range.length > 0 && !isTouching) {\n      setTargetScrollTop(selectedIndex * itemHeightRef.current)\n      setCurrentIndex(selectedIndex)\n    }\n  }, [selectedIndex, range])\n\n  // 是否处于归中状态\n  const isCenterTimerId = React.useRef<NodeJS.Timeout | null>(null)\n\n  // 简化为直接在滚动结束时通知父组件\n  const handleScrollEnd = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    // 做一个0.1s延时  0.1s之内没有新的滑动 则把选项归到中间 然后更新选中项\n    isCenterTimerId.current = setTimeout(() => {\n      if (!scrollViewRef.current) return\n\n      const scrollTop = scrollViewRef.current.scrollTop\n      const newIndex = getSelectedIndex(scrollTop)\n      setIsTouching(false)\n      // 调用updateIndex执行限位逻辑，获取是否触发了限位\n      const isLimited = Boolean(updateIndex(newIndex, columnId, true))\n      // 如果没有触发限位，才执行归中逻辑\n      if (!isLimited) {\n        setTargetScrollTop(newIndex * itemHeightRef.current + Math.random() * 0.001)\n      }\n    }, 100)\n  }\n\n  // 滚动处理\n  const handleScroll = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    const scrollTop = scrollViewRef.current.scrollTop\n    const newIndex = getSelectedIndex(scrollTop)\n    if (newIndex !== currentIndex) {\n      setCurrentIndex(newIndex)\n    }\n  }\n\n  // 渲染选项\n  const pickerItem = range.map((item, index) => {\n    const content = rangeKey && item && typeof item === 'object' ? item[rangeKey] : item\n\n    return (\n      <View\n        id={`picker-item-${columnId}-${index}`}\n        key={index}\n        ref={(el) => (itemRefs.current[index] = el)}\n        className={`taro-picker__item${index === currentIndex ? ' taro-picker__item--selected' : ''}`}\n        style={{\n          height: PICKER_LINE_HEIGHT,\n          color: index === currentIndex\n            ? (colors.itemSelectedColor || undefined)\n            : (colors.itemDefaultColor || undefined)\n        }}\n      >\n        {content}\n      </View>\n    )\n  })\n\n  const realPickerItems = [\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-top-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n    ...pickerItem,\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-bottom-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n  ]\n\n  return (\n    <View className=\"taro-picker__group\">\n      <View className=\"taro-picker__mask\" />\n      <View className=\"taro-picker__indicator\" />\n      <ScrollView\n        ref={scrollViewRef}\n        scrollY\n        showScrollbar={false}\n        className=\"taro-picker__content\"\n        style={{\n          height: PICKER_LINE_HEIGHT * PICKER_VISIBLE_ITEMS,\n        }}\n        scrollTop={targetScrollTop}\n        onScroll={handleScroll}\n        onTouchStart={() => setIsTouching(true)}\n        onScrollEnd={handleScrollEnd}\n        scrollWithAnimation\n      >\n        {realPickerItems}\n      </ScrollView>\n    </View>\n  )\n}\n\n// 日期选择器实现\nexport function PickerGroupDate(props: PickerGroupProps) {\n  const {\n    range = [],\n    columnId,\n    updateDay,\n    selectedIndex = 0,\n    colors = {},\n  } = props\n\n  const [targetScrollTop, setTargetScrollTop] = React.useState(0)\n  const scrollViewRef = React.useRef<TaroScrollView>(null)\n  const [currentIndex, setCurrentIndex] = React.useState(selectedIndex)\n  const [isTouching, setIsTouching] = React.useState(false)\n\n  const itemHeightRef = React.useRef(PICKER_LINE_HEIGHT)\n  React.useEffect(() => {\n    if (scrollViewRef.current) {\n      itemHeightRef.current = scrollViewRef.current.scrollHeight / scrollViewRef.current.childNodes.length\n    }\n  }, [range.length]) // 只在range长度变化时重新计算\n\n  const getSelectedIndex = (scrollTop: number) => {\n    return Math.round(scrollTop / itemHeightRef.current)\n  }\n\n  // 当selectedIndex变化时，调整滚动位置\n  React.useEffect(() => {\n    if (scrollViewRef.current && range.length > 0 && !isTouching) {\n      setTargetScrollTop(selectedIndex * itemHeightRef.current)\n      setCurrentIndex(selectedIndex)\n    }\n  }, [selectedIndex, range])\n\n  // 是否处于归中状态\n  const isCenterTimerId = React.useRef<NodeJS.Timeout | null>(null)\n\n  // 简化为直接在滚动结束时通知父组件\n  const handleScrollEnd = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n\n    // 做一个0.1s延时  0.1s之内没有新的滑动 则把选项归到中间 然后更新选中项\n    isCenterTimerId.current = setTimeout(() => {\n      if (!scrollViewRef.current) return\n\n      const scrollTop = scrollViewRef.current.scrollTop\n      const newIndex = getSelectedIndex(scrollTop)\n\n      setIsTouching(false)\n      setTargetScrollTop(newIndex * itemHeightRef.current + Math.random() * 0.001) // 随机数为了在一个项内滚动时强制刷新\n\n      // 更新日期值\n      if (updateDay) {\n        // 解析文本中的数字（移除年、月、日等后缀）\n        const valueText = range[newIndex] || ''\n        const numericValue = parseInt(valueText.replace(/[^0-9]/g, ''))\n        updateDay(isNaN(numericValue) ? 0 : numericValue, parseInt(columnId))\n      }\n    }, 100)\n  }\n\n  // 滚动处理\n  const handleScroll = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    const scrollTop = scrollViewRef.current.scrollTop\n    const newIndex = getSelectedIndex(scrollTop)\n    if (newIndex !== currentIndex) {\n      setCurrentIndex(newIndex)\n    }\n  }\n\n  // 渲染选项\n  const pickerItem = range.map((item, index) => {\n    return (\n      <View\n        id={`picker-item-${columnId}-${index}`}\n        key={index}\n        className={`taro-picker__item${index === currentIndex ? ' taro-picker__item--selected' : ''}`}\n        style={{\n          height: PICKER_LINE_HEIGHT,\n          color: index === currentIndex\n            ? (colors.itemSelectedColor || undefined)\n            : (colors.itemDefaultColor || undefined)\n        }}\n      >\n        {item}\n      </View>\n    )\n  })\n\n  const realPickerItems = [\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-top-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n    ...pickerItem,\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-bottom-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n  ]\n\n  return (\n    <View className=\"taro-picker__group\">\n      <View className=\"taro-picker__mask\" />\n      <View className=\"taro-picker__indicator\" />\n      <ScrollView\n        ref={scrollViewRef}\n        scrollY\n        showScrollbar={false}\n        className=\"taro-picker__content\"\n        style={{ height: PICKER_LINE_HEIGHT * PICKER_VISIBLE_ITEMS }}\n        scrollTop={targetScrollTop}\n        onScroll={handleScroll}\n        onTouchStart={() => setIsTouching(true)}\n        onScrollEnd={handleScrollEnd}\n        scrollWithAnimation\n      >\n        {realPickerItems}\n      </ScrollView>\n    </View>\n  )\n}\n\n// 地区选择器实现\nexport function PickerGroupRegion(props: PickerGroupProps) {\n  const {\n    range = [],\n    rangeKey,\n    columnId,\n    updateIndex,\n    selectedIndex = 0, // 使用selectedIndex参数，默认为0\n    colors = {},\n  } = props\n\n  const scrollViewRef = React.useRef<any>(null)\n  const [targetScrollTop, setTargetScrollTop] = React.useState(0)\n  const [currentIndex, setCurrentIndex] = React.useState(selectedIndex)\n  const [isTouching, setIsTouching] = React.useState(false)\n\n  const itemHeightRef = React.useRef(PICKER_LINE_HEIGHT)\n  const isUserBeginScrollRef = React.useRef(false)\n  React.useEffect(() => {\n    if (scrollViewRef.current) {\n      itemHeightRef.current = scrollViewRef.current.scrollHeight / scrollViewRef.current.childNodes.length\n    }\n  }, [range.length]) // 只在range长度变化时重新计算\n\n  const getSelectedIndex = (scrollTop: number) => {\n    return Math.round(scrollTop / itemHeightRef.current)\n  }\n\n  // 当selectedIndex变化时，调整滚动位置\n  React.useEffect(() => {\n    if (scrollViewRef.current && range.length > 0 && !isTouching) {\n      setTargetScrollTop(selectedIndex * itemHeightRef.current)\n      setCurrentIndex(selectedIndex)\n    }\n  }, [selectedIndex, range])\n\n  // 滚动结束处理\n  const isCenterTimerId = React.useRef<NodeJS.Timeout | null>(null)\n  const handleScrollEnd = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    // 做一个0.1s延时  0.1s之内没有新的滑动 则把选项归到中间 然后更新选中项\n    isCenterTimerId.current = setTimeout(() => {\n      if (!scrollViewRef.current) return\n\n      const scrollTop = scrollViewRef.current.scrollTop\n      const newIndex = getSelectedIndex(scrollTop)\n\n      setIsTouching(false)\n      setTargetScrollTop(newIndex * itemHeightRef.current + Math.random() * 0.001) // 随机数为了在一个项内滚动时强制刷新\n      updateIndex(newIndex, columnId, false, isUserBeginScrollRef.current)\n    }, 100)\n  }\n\n  // 滚动处理 - 在滚动时计算索引\n  const handleScroll = () => {\n    if (!scrollViewRef.current) return\n    if (isCenterTimerId.current) {\n      clearTimeout(isCenterTimerId.current)\n      isCenterTimerId.current = null\n    }\n    const scrollTop = scrollViewRef.current.scrollTop\n    const newIndex = getSelectedIndex(scrollTop)\n    if (newIndex !== currentIndex) {\n      setCurrentIndex(newIndex)\n    }\n  }\n\n  // 渲染选项\n  const pickerItem = range.map((item, index) => {\n    const content = rangeKey && item && typeof item === 'object' ? item[rangeKey] : item\n\n    return (\n      <View\n        id={`picker-item-${columnId}-${index}`}\n        key={index}\n        className={`taro-picker__item${index === currentIndex ? ' taro-picker__item--selected' : ''}`}\n        style={{\n          height: PICKER_LINE_HEIGHT,\n          color: index === currentIndex\n            ? (colors.itemSelectedColor || undefined)\n            : (colors.itemDefaultColor || undefined)\n        }}\n      >\n        {content}\n      </View>\n    )\n  })\n\n  const realPickerItems = [\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-top-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n    ...pickerItem,\n    ...new Array(PICKER_BLANK_ITEMS)\n      .fill(null)\n      .map((_, idx) => (\n        <View\n          key={`blank-bottom-${idx}`}\n          className=\"taro-picker__item taro-picker__item--blank\"\n          style={{ height: PICKER_LINE_HEIGHT }}\n        />\n      )),\n  ]\n  return (\n    <View className=\"taro-picker__group\">\n      <View className=\"taro-picker__mask\" />\n      <View className=\"taro-picker__indicator\" />\n      <ScrollView\n        ref={scrollViewRef}\n        scrollY\n        showScrollbar={false}\n        className=\"taro-picker__content\"\n        style={{ height: PICKER_LINE_HEIGHT * PICKER_VISIBLE_ITEMS }}\n        scrollTop={targetScrollTop}\n        onScroll={handleScroll}\n        onTouchStart={() => {\n          setIsTouching(true)\n          isUserBeginScrollRef.current = true\n        }}\n        onScrollEnd={handleScrollEnd}\n        scrollWithAnimation\n      >\n        {realPickerItems}\n      </ScrollView>\n    </View>\n  )\n}\n\n// 默认导出，根据 mode 自动分发\nexport function PickerGroup(props: PickerGroupProps) {\n  switch (props.mode) {\n    case 'time':\n      return <PickerGroupTime {...props} />\n    case 'date':\n      return <PickerGroupDate {...props} />\n    case 'region':\n      return <PickerGroupRegion {...props} />\n    default:\n      return <PickerGroupBasic {...props} />\n  }\n}\n"],"names":["PICKER_LINE_HEIGHT","PICKER_VISIBLE_ITEMS","PICKER_BLANK_ITEMS","PickerGroupBasic","props","range","rangeKey","columnId","updateIndex","onColumnChange","selectedIndex","colors","targetScrollTop","setTargetScrollTop","React","useState","scrollViewRef","useRef","itemRefs","currentIndex","setCurrentIndex","isTouching","setIsTouching","itemHeightRef","useEffect","current","scrollHeight","childNodes","length","getSelectedIndex","scrollTop","Math","round","isCenterTimerId","handleScrollEnd","clearTimeout","setTimeout","newIndex","random","index","handleScroll","pickerItem","map","item","content","_jsx","View","id","ref","el","className","style","height","color","itemSelectedColor","undefined","itemDefaultColor","children","realPickerItems","Array","fill","_","idx","_jsxs","ScrollView","scrollY","showScrollbar","onScroll","onTouchStart","onScrollEnd","scrollWithAnimation","PickerGroupTime","isLimited","Boolean","PickerGroupDate","updateDay","valueText","numericValue","parseInt","replace","isNaN","PickerGroupRegion","isUserBeginScrollRef","PickerGroup","mode"],"mappings":";;;;AAwBA,MAAMA,kBAAkB,GAAG,EAAE,CAAA;AAC7B,MAAMC,oBAAoB,GAAG,CAAC,CAAA;AAC9B,MAAMC,kBAAkB,GAAG,CAAC,CAAA;AAEtB,SAAUC,gBAAgBA,CAACC,KAAuB,EAAA;EACtD,MAAM;AACJC,IAAAA,KAAK,GAAG,EAAE;IACVC,QAAQ;IACRC,QAAQ;IACRC,WAAW;IACXC,cAAc;AACdC,IAAAA,aAAa,GAAG,CAAC;AAAE;AACnBC,IAAAA,MAAM,GAAG;AACV,GAAA,GAAGP,KAAK;EACT,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;AAC/D,EAAA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAiB,IAAI,CAAC;AACxD,EAAA,MAAMC,QAAQ,GAAGJ,KAAK,CAACG,MAAM,CAAyB,EAAE,CAAC;AACzD;EACA,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACC,QAAQ,CAACL,aAAa,CAAC;AACrE;EACA,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;AAEzD,EAAA,MAAMQ,aAAa,GAAGT,KAAK,CAACG,MAAM,CAACjB,kBAAkB,CAAC;EACtDc,KAAK,CAACU,SAAS,CAAC,MAAK;IACnB,IAAIR,aAAa,CAACS,OAAO,EAAE;AACzBF,MAAAA,aAAa,CAACE,OAAO,GAAGT,aAAa,CAACS,OAAO,CAACC,YAAY,GAAGV,aAAa,CAACS,OAAO,CAACE,UAAU,CAACC,MAAM;AACtG;GACD,EAAE,CAACvB,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAA;AAClB;EACA,MAAMC,gBAAgB,GAAIC,SAAiB,IAAI;IAC7C,OAAOC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAGP,aAAa,CAACE,OAAO,CAAC;GACrD;AAED;EACAX,KAAK,CAACU,SAAS,CAAC,MAAK;AACnB,IAAA,IAAIR,aAAa,CAACS,OAAO,IAAIpB,KAAK,CAACuB,MAAM,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;AAC5DR,MAAAA,kBAAkB,CAACH,aAAa,GAAGa,aAAa,CAACE,OAAO,CAAC;MACzDL,eAAe,CAACV,aAAa,CAAC;AAChC;AACF,GAAC,EAAE,CAACA,aAAa,EAAEL,KAAK,CAAC,CAAC;AAE1B;AACA,EAAA,MAAM4B,eAAe,GAAGnB,KAAK,CAACG,MAAM,CAAwB,IAAI,CAAC;AACjE;EACA,MAAMiB,eAAe,GAAGA,MAAK;AAC3B,IAAA,IAAI,CAAClB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA;AACAQ,IAAAA,eAAe,CAACR,OAAO,GAAGW,UAAU,CAAC,MAAK;AACxC,MAAA,IAAI,CAACpB,aAAa,CAACS,OAAO,EAAE;AAE5B,MAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,MAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;MAE5CR,aAAa,CAAC,KAAK,CAAC;AACpBT,MAAAA,kBAAkB,CAACwB,QAAQ,GAAGd,aAAa,CAACE,OAAO,GAAGM,IAAI,CAACO,MAAM,EAAE,GAAG,KAAK,CAAC,CAAA;AAC5E9B,MAAAA,WAAW,CAAC6B,QAAQ,EAAE9B,QAAQ,CAAC;AAC/BE,MAAAA,cAAc,KAAd,IAAA,IAAAA,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,cAAc,CAAG;QAAEF,QAAQ;AAAEgC,QAAAA,KAAK,EAAEF;AAAQ,OAAE,CAAC;KAChD,EAAE,GAAG,CAAC;GACR;AACD;EACA,MAAMG,YAAY,GAAGA,MAAK;AACxB,IAAA,IAAI,CAACxB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA,IAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,IAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;IAC5C,IAAIO,QAAQ,KAAKlB,YAAY,EAAE;MAC7BC,eAAe,CAACiB,QAAQ,CAAC;AAC3B;GACD;AAED;EACA,MAAMI,UAAU,GAAGpC,KAAK,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,KAAI;AAC3C,IAAA,MAAMK,OAAO,GAAGtC,QAAQ,IAAIqC,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACrC,QAAQ,CAAC,GAAGqC,IAAI;IAEpF,oBACEE,GAAA,CAACC,IAAI,EAAA;AACHC,MAAAA,EAAE,EAAE,CAAA,YAAA,EAAexC,QAAQ,CAAA,CAAA,EAAIgC,KAAK,CAAG,CAAA;MAEvCS,GAAG,EAAGC,EAAE,IAAM/B,QAAQ,CAACO,OAAO,CAACc,KAAK,CAAC,GAAGU,EAAI;MAC5CC,SAAS,EAAE,oBAAoBX,KAAK,KAAKpB,YAAY,GAAG,8BAA8B,GAAG,EAAE,CAAG,CAAA;AAC9FgC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEpD,kBAAkB;AAC1BqD,QAAAA,KAAK,EAAEd,KAAK,KAAKpB,YAAY,GACxBR,MAAM,CAAC2C,iBAAiB,IAAIC,SAAS,GACrC5C,MAAM,CAAC6C,gBAAgB,IAAID;OAChC;AAAAE,MAAAA,QAAA,EAEDb;AAAO,KAAA,EAVHL,KAWD,CAAC;AAEX,GAAC,CAAC;EAEF,MAAMmB,eAAe,GAAG,CACtB,GAAG,IAAIC,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAa8D,UAAAA,EAAAA,GAAG,CAEiB,CAAA,CAEzC,CAAC,EACJ,GAAGrB,UAAU,EACb,GAAG,IAAIkB,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAgB8D,aAAAA,EAAAA,GAAG,CAEc,CAAA,CAEzC,CAAC,CACL;EAED,oBACEC,IAAA,CAACjB,IAAI,EAAA;AAACI,IAAAA,SAAS,EAAC,oBAAoB;IAAAO,QAAA,EAAA,cAClCZ,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAmB,KACnC,CAAA,eAAAL,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAwB,KACxC,CAAA,eAAAL,GAAA,CAACmB,UAAU,EAAA;AACThB,MAAAA,GAAG,EAAEhC,aAAc;MACnBiD,OAAO,EAAA,IAAA;AACPC,MAAAA,aAAa,EAAE,KAAM;AACrBhB,MAAAA,SAAS,EAAC,sBAAsB;AAChCC,MAAAA,KAAK,EAAE;QACLC,MAAM,EAAEpD,kBAAkB,GAAGC;OAC7B;AACF6B,MAAAA,SAAS,EAAElB,eAAgB;AAC3BuD,MAAAA,QAAQ,EAAE3B,YAAa;AACvB4B,MAAAA,YAAY,EAAEA,MAAM9C,aAAa,CAAC,IAAI,CAAE;AACxC+C,MAAAA,WAAW,EAAEnC,eAAgB;MAC7BoC,mBAAmB,EAAA,IAAA;AAAAb,MAAAA,QAAA,EAElBC;AAAe,KACN,CACd;AAAA,GAAM,CAAC;AAEX;AAEA;AACM,SAAUa,eAAeA,CAACnE,KAAuB,EAAA;EACrD,MAAM;AACJC,IAAAA,KAAK,GAAG,EAAE;IACVC,QAAQ;IACRC,QAAQ;IACRC,WAAW;AACXE,IAAAA,aAAa,GAAG,CAAC;AACjBC,IAAAA,MAAM,GAAG;AAAE,GACZ,GAAGP,KAAK;EAET,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;AAC/D,EAAA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAiB,IAAI,CAAC;AACxD,EAAA,MAAMC,QAAQ,GAAGJ,KAAK,CAACG,MAAM,CAAyB,EAAE,CAAC;EACzD,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACC,QAAQ,CAACL,aAAa,CAAC;EACrE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;AAEzD,EAAA,MAAMQ,aAAa,GAAGT,KAAK,CAACG,MAAM,CAACjB,kBAAkB,CAAC;EACtDc,KAAK,CAACU,SAAS,CAAC,MAAK;IACnB,IAAIR,aAAa,CAACS,OAAO,EAAE;AACzBF,MAAAA,aAAa,CAACE,OAAO,GAAGT,aAAa,CAACS,OAAO,CAACC,YAAY,GAAGV,aAAa,CAACS,OAAO,CAACE,UAAU,CAACC,MAAM;AACtG;GACD,EAAE,CAACvB,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAA;EAElB,MAAMC,gBAAgB,GAAIC,SAAiB,IAAI;IAC7C,OAAOC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAGP,aAAa,CAACE,OAAO,CAAC;GACrD;AAED;EACAX,KAAK,CAACU,SAAS,CAAC,MAAK;AACnB,IAAA,IAAIR,aAAa,CAACS,OAAO,IAAIpB,KAAK,CAACuB,MAAM,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;AAC5DR,MAAAA,kBAAkB,CAACH,aAAa,GAAGa,aAAa,CAACE,OAAO,CAAC;MACzDL,eAAe,CAACV,aAAa,CAAC;AAChC;AACF,GAAC,EAAE,CAACA,aAAa,EAAEL,KAAK,CAAC,CAAC;AAE1B;AACA,EAAA,MAAM4B,eAAe,GAAGnB,KAAK,CAACG,MAAM,CAAwB,IAAI,CAAC;AAEjE;EACA,MAAMiB,eAAe,GAAGA,MAAK;AAC3B,IAAA,IAAI,CAAClB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA;AACAQ,IAAAA,eAAe,CAACR,OAAO,GAAGW,UAAU,CAAC,MAAK;AACxC,MAAA,IAAI,CAACpB,aAAa,CAACS,OAAO,EAAE;AAE5B,MAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,MAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;MAC5CR,aAAa,CAAC,KAAK,CAAC;AACpB;AACA,MAAA,MAAMkD,SAAS,GAAGC,OAAO,CAACjE,WAAW,CAAC6B,QAAQ,EAAE9B,QAAQ,EAAE,IAAI,CAAC,CAAC;AAChE;MACA,IAAI,CAACiE,SAAS,EAAE;AACd3D,QAAAA,kBAAkB,CAACwB,QAAQ,GAAGd,aAAa,CAACE,OAAO,GAAGM,IAAI,CAACO,MAAM,EAAE,GAAG,KAAK,CAAC;AAC9E;KACD,EAAE,GAAG,CAAC;GACR;AAED;EACA,MAAME,YAAY,GAAGA,MAAK;AACxB,IAAA,IAAI,CAACxB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA,IAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,IAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;IAC5C,IAAIO,QAAQ,KAAKlB,YAAY,EAAE;MAC7BC,eAAe,CAACiB,QAAQ,CAAC;AAC3B;GACD;AAED;EACA,MAAMI,UAAU,GAAGpC,KAAK,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,KAAI;AAC3C,IAAA,MAAMK,OAAO,GAAGtC,QAAQ,IAAIqC,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACrC,QAAQ,CAAC,GAAGqC,IAAI;IAEpF,oBACEE,GAAA,CAACC,IAAI,EAAA;AACHC,MAAAA,EAAE,EAAE,CAAA,YAAA,EAAexC,QAAQ,CAAA,CAAA,EAAIgC,KAAK,CAAG,CAAA;MAEvCS,GAAG,EAAGC,EAAE,IAAM/B,QAAQ,CAACO,OAAO,CAACc,KAAK,CAAC,GAAGU,EAAI;MAC5CC,SAAS,EAAE,oBAAoBX,KAAK,KAAKpB,YAAY,GAAG,8BAA8B,GAAG,EAAE,CAAG,CAAA;AAC9FgC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEpD,kBAAkB;AAC1BqD,QAAAA,KAAK,EAAEd,KAAK,KAAKpB,YAAY,GACxBR,MAAM,CAAC2C,iBAAiB,IAAIC,SAAS,GACrC5C,MAAM,CAAC6C,gBAAgB,IAAID;OAChC;AAAAE,MAAAA,QAAA,EAEDb;AAAO,KAAA,EAVHL,KAWD,CAAC;AAEX,GAAC,CAAC;EAEF,MAAMmB,eAAe,GAAG,CACtB,GAAG,IAAIC,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAa8D,UAAAA,EAAAA,GAAG,CAEiB,CAAA,CAEzC,CAAC,EACJ,GAAGrB,UAAU,EACb,GAAG,IAAIkB,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAgB8D,aAAAA,EAAAA,GAAG,CAEc,CAAA,CAEzC,CAAC,CACL;EAED,oBACEC,IAAA,CAACjB,IAAI,EAAA;AAACI,IAAAA,SAAS,EAAC,oBAAoB;IAAAO,QAAA,EAAA,cAClCZ,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAmB,KACnC,CAAA,eAAAL,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAwB,KACxC,CAAA,eAAAL,GAAA,CAACmB,UAAU,EAAA;AACThB,MAAAA,GAAG,EAAEhC,aAAc;MACnBiD,OAAO,EAAA,IAAA;AACPC,MAAAA,aAAa,EAAE,KAAM;AACrBhB,MAAAA,SAAS,EAAC,sBAAsB;AAChCC,MAAAA,KAAK,EAAE;QACLC,MAAM,EAAEpD,kBAAkB,GAAGC;OAC7B;AACF6B,MAAAA,SAAS,EAAElB,eAAgB;AAC3BuD,MAAAA,QAAQ,EAAE3B,YAAa;AACvB4B,MAAAA,YAAY,EAAEA,MAAM9C,aAAa,CAAC,IAAI,CAAE;AACxC+C,MAAAA,WAAW,EAAEnC,eAAgB;MAC7BoC,mBAAmB,EAAA,IAAA;AAAAb,MAAAA,QAAA,EAElBC;AAAe,KACN,CACd;AAAA,GAAM,CAAC;AAEX;AAEA;AACM,SAAUgB,eAAeA,CAACtE,KAAuB,EAAA;EACrD,MAAM;AACJC,IAAAA,KAAK,GAAG,EAAE;IACVE,QAAQ;IACRoE,SAAS;AACTjE,IAAAA,aAAa,GAAG,CAAC;AACjBC,IAAAA,MAAM,GAAG;AACV,GAAA,GAAGP,KAAK;EAET,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;AAC/D,EAAA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAiB,IAAI,CAAC;EACxD,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACC,QAAQ,CAACL,aAAa,CAAC;EACrE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;AAEzD,EAAA,MAAMQ,aAAa,GAAGT,KAAK,CAACG,MAAM,CAACjB,kBAAkB,CAAC;EACtDc,KAAK,CAACU,SAAS,CAAC,MAAK;IACnB,IAAIR,aAAa,CAACS,OAAO,EAAE;AACzBF,MAAAA,aAAa,CAACE,OAAO,GAAGT,aAAa,CAACS,OAAO,CAACC,YAAY,GAAGV,aAAa,CAACS,OAAO,CAACE,UAAU,CAACC,MAAM;AACtG;GACD,EAAE,CAACvB,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAA;EAElB,MAAMC,gBAAgB,GAAIC,SAAiB,IAAI;IAC7C,OAAOC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAGP,aAAa,CAACE,OAAO,CAAC;GACrD;AAED;EACAX,KAAK,CAACU,SAAS,CAAC,MAAK;AACnB,IAAA,IAAIR,aAAa,CAACS,OAAO,IAAIpB,KAAK,CAACuB,MAAM,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;AAC5DR,MAAAA,kBAAkB,CAACH,aAAa,GAAGa,aAAa,CAACE,OAAO,CAAC;MACzDL,eAAe,CAACV,aAAa,CAAC;AAChC;AACF,GAAC,EAAE,CAACA,aAAa,EAAEL,KAAK,CAAC,CAAC;AAE1B;AACA,EAAA,MAAM4B,eAAe,GAAGnB,KAAK,CAACG,MAAM,CAAwB,IAAI,CAAC;AAEjE;EACA,MAAMiB,eAAe,GAAGA,MAAK;AAC3B,IAAA,IAAI,CAAClB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AAEA;AACAQ,IAAAA,eAAe,CAACR,OAAO,GAAGW,UAAU,CAAC,MAAK;AACxC,MAAA,IAAI,CAACpB,aAAa,CAACS,OAAO,EAAE;AAE5B,MAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,MAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;MAE5CR,aAAa,CAAC,KAAK,CAAC;AACpBT,MAAAA,kBAAkB,CAACwB,QAAQ,GAAGd,aAAa,CAACE,OAAO,GAAGM,IAAI,CAACO,MAAM,EAAE,GAAG,KAAK,CAAC,CAAA;AAE5E;AACA,MAAA,IAAIqC,SAAS,EAAE;AACb;AACA,QAAA,MAAMC,SAAS,GAAGvE,KAAK,CAACgC,QAAQ,CAAC,IAAI,EAAE;AACvC,QAAA,MAAMwC,YAAY,GAAGC,QAAQ,CAACF,SAAS,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;AAC/DJ,QAAAA,SAAS,CAACK,KAAK,CAACH,YAAY,CAAC,GAAG,CAAC,GAAGA,YAAY,EAAEC,QAAQ,CAACvE,QAAQ,CAAC,CAAC;AACvE;KACD,EAAE,GAAG,CAAC;GACR;AAED;EACA,MAAMiC,YAAY,GAAGA,MAAK;AACxB,IAAA,IAAI,CAACxB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA,IAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,IAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;IAC5C,IAAIO,QAAQ,KAAKlB,YAAY,EAAE;MAC7BC,eAAe,CAACiB,QAAQ,CAAC;AAC3B;GACD;AAED;EACA,MAAMI,UAAU,GAAGpC,KAAK,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,KAAI;IAC3C,oBACEM,GAAA,CAACC,IAAI,EAAA;AACHC,MAAAA,EAAE,EAAE,CAAA,YAAA,EAAexC,QAAQ,CAAA,CAAA,EAAIgC,KAAK,CAAG,CAAA;MAEvCW,SAAS,EAAE,oBAAoBX,KAAK,KAAKpB,YAAY,GAAG,8BAA8B,GAAG,EAAE,CAAG,CAAA;AAC9FgC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEpD,kBAAkB;AAC1BqD,QAAAA,KAAK,EAAEd,KAAK,KAAKpB,YAAY,GACxBR,MAAM,CAAC2C,iBAAiB,IAAIC,SAAS,GACrC5C,MAAM,CAAC6C,gBAAgB,IAAID;OAChC;AAAAE,MAAAA,QAAA,EAEDd;AAAI,KAAA,EATAJ,KAUD,CAAC;AAEX,GAAC,CAAC;EAEF,MAAMmB,eAAe,GAAG,CACtB,GAAG,IAAIC,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAa8D,UAAAA,EAAAA,GAAG,CAEiB,CAAA,CAEzC,CAAC,EACJ,GAAGrB,UAAU,EACb,GAAG,IAAIkB,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAgB8D,aAAAA,EAAAA,GAAG,CAEc,CAAA,CAEzC,CAAC,CACL;EAED,oBACEC,IAAA,CAACjB,IAAI,EAAA;AAACI,IAAAA,SAAS,EAAC,oBAAoB;IAAAO,QAAA,EAAA,cAClCZ,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAmB,KACnC,CAAA,eAAAL,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAwB,KACxC,CAAA,eAAAL,GAAA,CAACmB,UAAU,EAAA;AACThB,MAAAA,GAAG,EAAEhC,aAAc;MACnBiD,OAAO,EAAA,IAAA;AACPC,MAAAA,aAAa,EAAE,KAAM;AACrBhB,MAAAA,SAAS,EAAC,sBAAsB;AAChCC,MAAAA,KAAK,EAAE;QAAEC,MAAM,EAAEpD,kBAAkB,GAAGC;OAAuB;AAC7D6B,MAAAA,SAAS,EAAElB,eAAgB;AAC3BuD,MAAAA,QAAQ,EAAE3B,YAAa;AACvB4B,MAAAA,YAAY,EAAEA,MAAM9C,aAAa,CAAC,IAAI,CAAE;AACxC+C,MAAAA,WAAW,EAAEnC,eAAgB;MAC7BoC,mBAAmB,EAAA,IAAA;AAAAb,MAAAA,QAAA,EAElBC;AAAe,KACN,CACd;AAAA,GAAM,CAAC;AAEX;AAEA;AACM,SAAUuB,iBAAiBA,CAAC7E,KAAuB,EAAA;EACvD,MAAM;AACJC,IAAAA,KAAK,GAAG,EAAE;IACVC,QAAQ;IACRC,QAAQ;IACRC,WAAW;AACXE,IAAAA,aAAa,GAAG,CAAC;AAAE;AACnBC,IAAAA,MAAM,GAAG;AACV,GAAA,GAAGP,KAAK;AAET,EAAA,MAAMY,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAM,IAAI,CAAC;EAC7C,MAAM,CAACL,eAAe,EAAEC,kBAAkB,CAAC,GAAGC,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACC,QAAQ,CAACL,aAAa,CAAC;EACrE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGR,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;AAEzD,EAAA,MAAMQ,aAAa,GAAGT,KAAK,CAACG,MAAM,CAACjB,kBAAkB,CAAC;AACtD,EAAA,MAAMkF,oBAAoB,GAAGpE,KAAK,CAACG,MAAM,CAAC,KAAK,CAAC;EAChDH,KAAK,CAACU,SAAS,CAAC,MAAK;IACnB,IAAIR,aAAa,CAACS,OAAO,EAAE;AACzBF,MAAAA,aAAa,CAACE,OAAO,GAAGT,aAAa,CAACS,OAAO,CAACC,YAAY,GAAGV,aAAa,CAACS,OAAO,CAACE,UAAU,CAACC,MAAM;AACtG;GACD,EAAE,CAACvB,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAA;EAElB,MAAMC,gBAAgB,GAAIC,SAAiB,IAAI;IAC7C,OAAOC,IAAI,CAACC,KAAK,CAACF,SAAS,GAAGP,aAAa,CAACE,OAAO,CAAC;GACrD;AAED;EACAX,KAAK,CAACU,SAAS,CAAC,MAAK;AACnB,IAAA,IAAIR,aAAa,CAACS,OAAO,IAAIpB,KAAK,CAACuB,MAAM,GAAG,CAAC,IAAI,CAACP,UAAU,EAAE;AAC5DR,MAAAA,kBAAkB,CAACH,aAAa,GAAGa,aAAa,CAACE,OAAO,CAAC;MACzDL,eAAe,CAACV,aAAa,CAAC;AAChC;AACF,GAAC,EAAE,CAACA,aAAa,EAAEL,KAAK,CAAC,CAAC;AAE1B;AACA,EAAA,MAAM4B,eAAe,GAAGnB,KAAK,CAACG,MAAM,CAAwB,IAAI,CAAC;EACjE,MAAMiB,eAAe,GAAGA,MAAK;AAC3B,IAAA,IAAI,CAAClB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA;AACAQ,IAAAA,eAAe,CAACR,OAAO,GAAGW,UAAU,CAAC,MAAK;AACxC,MAAA,IAAI,CAACpB,aAAa,CAACS,OAAO,EAAE;AAE5B,MAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,MAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;MAE5CR,aAAa,CAAC,KAAK,CAAC;AACpBT,MAAAA,kBAAkB,CAACwB,QAAQ,GAAGd,aAAa,CAACE,OAAO,GAAGM,IAAI,CAACO,MAAM,EAAE,GAAG,KAAK,CAAC,CAAA;MAC5E9B,WAAW,CAAC6B,QAAQ,EAAE9B,QAAQ,EAAE,KAAK,EAAE2E,oBAAoB,CAACzD,OAAO,CAAC;KACrE,EAAE,GAAG,CAAC;GACR;AAED;EACA,MAAMe,YAAY,GAAGA,MAAK;AACxB,IAAA,IAAI,CAACxB,aAAa,CAACS,OAAO,EAAE;IAC5B,IAAIQ,eAAe,CAACR,OAAO,EAAE;AAC3BU,MAAAA,YAAY,CAACF,eAAe,CAACR,OAAO,CAAC;MACrCQ,eAAe,CAACR,OAAO,GAAG,IAAI;AAChC;AACA,IAAA,MAAMK,SAAS,GAAGd,aAAa,CAACS,OAAO,CAACK,SAAS;AACjD,IAAA,MAAMO,QAAQ,GAAGR,gBAAgB,CAACC,SAAS,CAAC;IAC5C,IAAIO,QAAQ,KAAKlB,YAAY,EAAE;MAC7BC,eAAe,CAACiB,QAAQ,CAAC;AAC3B;GACD;AAED;EACA,MAAMI,UAAU,GAAGpC,KAAK,CAACqC,GAAG,CAAC,CAACC,IAAI,EAAEJ,KAAK,KAAI;AAC3C,IAAA,MAAMK,OAAO,GAAGtC,QAAQ,IAAIqC,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACrC,QAAQ,CAAC,GAAGqC,IAAI;IAEpF,oBACEE,GAAA,CAACC,IAAI,EAAA;AACHC,MAAAA,EAAE,EAAE,CAAA,YAAA,EAAexC,QAAQ,CAAA,CAAA,EAAIgC,KAAK,CAAG,CAAA;MAEvCW,SAAS,EAAE,oBAAoBX,KAAK,KAAKpB,YAAY,GAAG,8BAA8B,GAAG,EAAE,CAAG,CAAA;AAC9FgC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAEpD,kBAAkB;AAC1BqD,QAAAA,KAAK,EAAEd,KAAK,KAAKpB,YAAY,GACxBR,MAAM,CAAC2C,iBAAiB,IAAIC,SAAS,GACrC5C,MAAM,CAAC6C,gBAAgB,IAAID;OAChC;AAAAE,MAAAA,QAAA,EAEDb;AAAO,KAAA,EATHL,KAUD,CAAC;AAEX,GAAC,CAAC;EAEF,MAAMmB,eAAe,GAAG,CACtB,GAAG,IAAIC,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAa8D,UAAAA,EAAAA,GAAG,CAEiB,CAAA,CAEzC,CAAC,EACJ,GAAGrB,UAAU,EACb,GAAG,IAAIkB,KAAK,CAACzD,kBAAkB,CAAC,CAC7B0D,IAAI,CAAC,IAAI,CAAC,CACVlB,GAAG,CAAC,CAACmB,CAAC,EAAEC,GAAG,kBACVjB,GAAA,CAACC,IAAI,EAAA;AAEHI,IAAAA,SAAS,EAAC,4CAA4C;AACtDC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAEpD;AAAkB;AAAG,GAAA,EAFjC,CAAgB8D,aAAAA,EAAAA,GAAG,CAEc,CAAA,CAEzC,CAAC,CACL;EACD,oBACEC,IAAA,CAACjB,IAAI,EAAA;AAACI,IAAAA,SAAS,EAAC,oBAAoB;IAAAO,QAAA,EAAA,cAClCZ,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAmB,KACnC,CAAA,eAAAL,GAAA,CAACC,IAAI,EAAA;AAACI,MAAAA,SAAS,EAAC;AAAwB,KACxC,CAAA,eAAAL,GAAA,CAACmB,UAAU,EAAA;AACThB,MAAAA,GAAG,EAAEhC,aAAc;MACnBiD,OAAO,EAAA,IAAA;AACPC,MAAAA,aAAa,EAAE,KAAM;AACrBhB,MAAAA,SAAS,EAAC,sBAAsB;AAChCC,MAAAA,KAAK,EAAE;QAAEC,MAAM,EAAEpD,kBAAkB,GAAGC;OAAuB;AAC7D6B,MAAAA,SAAS,EAAElB,eAAgB;AAC3BuD,MAAAA,QAAQ,EAAE3B,YAAa;MACvB4B,YAAY,EAAEA,MAAK;QACjB9C,aAAa,CAAC,IAAI,CAAC;QACnB4D,oBAAoB,CAACzD,OAAO,GAAG,IAAI;OACnC;AACF4C,MAAAA,WAAW,EAAEnC,eAAgB;MAC7BoC,mBAAmB,EAAA,IAAA;AAAAb,MAAAA,QAAA,EAElBC;AAAe,KACN,CACd;AAAA,GAAM,CAAC;AAEX;AAEA;AACM,SAAUyB,WAAWA,CAAC/E,KAAuB,EAAA;EACjD,QAAQA,KAAK,CAACgF,IAAI;AAChB,IAAA,KAAK,MAAM;MACT,oBAAOvC,GAAA,CAAC0B,eAAe,EAAA;QAAA,GAAKnE;AAAK,QAAI;AACvC,IAAA,KAAK,MAAM;MACT,oBAAOyC,GAAA,CAAC6B,eAAe,EAAA;QAAA,GAAKtE;AAAK,QAAI;AACvC,IAAA,KAAK,QAAQ;MACX,oBAAOyC,GAAA,CAACoC,iBAAiB,EAAA;QAAA,GAAK7E;AAAK,QAAI;AACzC,IAAA;MACE,oBAAOyC,GAAA,CAAC1C,gBAAgB,EAAA;QAAA,GAAKC;AAAK,QAAI;AAC1C;AACF;;;;"}